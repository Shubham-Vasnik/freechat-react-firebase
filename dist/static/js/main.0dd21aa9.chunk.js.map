{"version":3,"sources":["history.js","components/header/Header.js","actions/auth.js","actions/types.js","components/auth/Register.js","components/auth/LoginForm.js","components/auth/Login.js","config/firebaseConfig.js","components/groups/CreateGroup.js","actions/groups.js","components/groups/Groups.js","components/groups/Message.js","components/groups/Chat.js","components/groups/JoinGroup.js","components/Home.js","components/App.js","reducers/authReducer.js","reducers/groupReducer.js","reducers/messagesReducer.js","reducers/index.js","index.js"],"names":["createBrowserHistory","Header","userLinks","auth","uid","className","to","loggedInLinks","profile","username","onClick","props","logout","this","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","React","Component","connect","state","firebase","dispatch","getState","getFirebase","signOut","then","Register","onSubmit","formValues","signUp","renderInput","input","label","meta","touched","error","autoComplete","renderError","renderCheckbox","autocomplete","class","role","style","color","handleSubmit","Field","name","component","authError","wrapedForm","reduxForm","form","validate","errors","email","password","confirmPassword","newUser","getFirestore","firestore","createUserWithEmailAndPassword","res","collection","doc","user","set","history","push","catch","err","payload","SignInForm","required","Login","login","LoginForm","credentials","signInWithEmailAndPassword","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","settings","CreateGroup","createGroup","placeholder","groupname","group","adminId","add","adminUsername","createdAt","Date","members","update","groups","FieldValue","arrayUnion","Groups","wait","time","Promise","resolve","setTimeout","fetchGroups","map","href","key","maxWidth","src","groupicon","alt","description","renderGroupList","compose","Object","values","console","log","data","get","assign","firestoreConnect","Message","message","author","moment","toDate","format","text","Chat","msg","onInputChange","event","setState","target","value","onFormSubmit","match","params","preventDefault","sendMessage","document","querySelector","scrollToBottom","chatMessagesRef","createRef","animateScroll","containerId","fetchGroup","groupId","leaveGroup","member","messages","onLeaveGroup","renderMembers","ref","renderMessages","onChange","ownProps","ordered","fetchMessages","querySnapshot","docs","userId","arrayRemove","subcollections","orderBy","storeAs","JoinGroup","joinGroup","where","forEach","Home","App","path","exact","intialState","authReducer","action","groupReducer","_","mapKeys","messagesReducer","combineReducers","formReducer","firebaseReducer","firestoreReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","reducers","applyMiddleware","reduxThunk","withExtraArgument","reduxFirestore","firebaseConfig","rrfProps","config","userProfile","useFirestoreForProfile","createFirestoreInstance","AuthIsLoaded","children","useSelector","isLoaded","ReactDOM","render"],"mappings":"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","file":"static/js/main.0dd21aa9.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'; \r\nexport default createBrowserHistory();\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport {logout} from '../../actions/auth';\r\n\r\nclass Header extends React.Component{\r\n\r\n\r\n  userLinks = (auth) => auth.uid ? (\r\n    <ul className=\"navbar-nav mr-auto\">\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/groups\">My Groups</Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n          <Link className=\"nav-link\" to=\"/groups/create\"> Create A New Group</Link>\r\n      </li>\r\n      <li className=\"nav-item\">\r\n        <Link className=\"nav-link\" to=\"/groups/join\"> Join A Group</Link>\r\n      </li>\r\n    </ul>\r\n  ):\"\"\r\n\r\n  loggedInLinks = (auth, profile) => auth.uid ? (\r\n    <>\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"#\">Welcome {profile.username}</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n            <button className=\"nav-link btn btn-link\" onClick={this.props.logout}>Logout</button>\r\n        </li>\r\n    </>\r\n  ):(\r\n    <>\r\n          <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/register\">Signup</Link>\r\n          </li>\r\n    </>\r\n  )\r\n\r\n\r\n    render(){\r\n\r\n      const {auth, profile}  = this.props;\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n            <Link className=\"navbar-brand\" to=\"/\">Free Chat</Link>\r\n            <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n          \r\n            <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n              {this.userLinks(auth)}\r\n              <ul className=\"navbar-nav ml-auto\">\r\n                {this.loggedInLinks(auth, profile)}   \r\n              </ul>\r\n            </div>\r\n          </nav>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    auth:state.firebase.auth,\r\n    profile:state.firebase.profile\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, {logout})(Header);","import history from '../history';\r\n\r\nimport {LOGIN_SUCCESS, LOGIN_ERROR, LOGOUT_SUCCESS, SIGN_UP_SUCCESS, SIGN_UP_ERROR} from './types';\r\n\r\nexport const login = (credentials) => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n\r\n        firebase.auth().signInWithEmailAndPassword(\r\n            credentials.email,\r\n            credentials.password\r\n        ).then(\r\n            () => {\r\n                dispatch({type:LOGIN_SUCCESS});\r\n                history.push('/groups');\r\n            }\r\n        ).catch(\r\n            (err) => {\r\n                dispatch({type:LOGIN_ERROR, payload:err});\r\n            }\r\n        )\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return (dispatch, getState, {getFirebase}) => {\r\n        const firebase = getFirebase();\r\n        firebase.auth().signOut().then( () => {\r\n            dispatch({type:LOGOUT_SUCCESS })\r\n        })\r\n    }\r\n}\r\n\r\nexport const signUp = (newUser) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firebase = getFirebase();\r\n        const firestore = getFirestore();\r\n\r\n        firebase.auth().createUserWithEmailAndPassword(\r\n            newUser.email,\r\n            newUser.password,\r\n        ).then( (res) => {\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                username:newUser.username,\r\n            })\r\n        }).then( () => {\r\n            dispatch({type:SIGN_UP_SUCCESS});\r\n            history.push('/groups/join');\r\n        }).catch( (err) => {\r\n            dispatch({type:SIGN_UP_ERROR, payload:err});\r\n        })\r\n\r\n    }\r\n}","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_ERROR = 'SIGN_UP_ERROR';\r\nexport const CREATE_GROUP = 'CREATE_GROUP';\r\nexport const CREATE_GROUP_ERROR = 'CREATE_GROUP_ERROR';\r\nexport const FETCH_GROUPS = 'FETCH_GROUPS';\r\nexport const FETCH_GROUP = 'FETCH_GROUP';\r\nexport const MESSAGE_SENT = 'MESSAGE_SENT';\r\nexport const MESSAGE_SENT_ERROR = 'MESSAGE_SENT_ERROR';\r\nexport const FETCH_MESSAGES = 'FEATCH_MESSAGES';\r\nexport const FETCH_MESSAGES_ERROR = 'FETCH_MESSAGES_ERROR';\r\nexport const JOIN_GROUP = 'JOIN_GROUP';\r\nexport const LEAVE_GROUP = 'LEAVE_GROUP';","import React from 'react';\r\nimport { Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {signUp} from '../../actions/auth';\r\n\r\nclass Register extends React.Component{\r\n\r\n\r\n    onSubmit = (formValues) =>{\r\n        this.props.signUp(formValues);\r\n    }  \r\n\r\n\r\n    renderError({touched,error}){\r\n\r\n        if(touched && error){\r\n            return (\r\n                <div class=\"alert alert-danger mt-2\" role=\"alert\">\r\n                    <i className=\"far fa-times-circle\" style={{color: 'red'}}></i> {error} \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderInput = ({input,label,meta,type}) => {\r\n        const className = `form-group ${meta.touched && meta.error ? 'alert alert-danger' : ''}`\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input className=\"form-control\" autoComplete=\"false\" {...input} type={type}/>\r\n                {this.renderError(meta)}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n\r\n    renderCheckbox = ({input,label,meta,type}) => {\r\n\r\n       return (\r\n                <div className=\"form-group\">\r\n                    <label>{label}</label>\r\n                    <input className=\"checkbox\" autocomplete=\"false\" {...input} type={type}/>\r\n                    {this.renderError(meta)}\r\n                </div>\r\n       );\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n\r\n            <div className=\"container register-container\">\r\n               <h1>Create A New Account</h1>\r\n               <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"register-form\">\r\n                    <Field name=\"username\"  component={this.renderInput} label=\"Username\" type=\"text\"/>\r\n                    <Field name=\"email\"  component={this.renderInput} label=\"Email\" type=\"email\"/>\r\n                    <Field name=\"password\" component={this.renderInput} label=\"Password\" type=\"password\"/>\r\n                    <Field name=\"confirmPassword\" component={this.renderInput} label=\"Re-enter Password\" type=\"password\"/>\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-success btn-lg\" id=\"submit-btn\">Sign up</button>\r\n                    </div>\r\n                    {this.props.authError ? \r\n                        (<div class=\"alert alert-danger mt-2\" role=\"alert\">\r\n                            <i className=\"far fa-times-circle\" style={{color: 'red'}}></i> {this.props.authError} \r\n                        </div>)\r\n                    :''}\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n\r\n    if(!formValues.username){\r\n        errors.username = \"You must enter a valid Username\";\r\n    }\r\n\r\n    if(!formValues.email){\r\n        errors.email = \"You must enter a valid Email address\";\r\n    }\r\n\r\n    if(!formValues.password){\r\n        errors.password = \"You must enter a valid Password\";\r\n    }\r\n\r\n    if(!formValues.confirmPassword){\r\n        errors.confirmPassword = \"You must enter a valid Password\";\r\n    }\r\n\r\n    if(formValues.password !== formValues.confirmPassword){\r\n        errors.confirmPassword = \"Password and Confirm Password did not match\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        auth:state.firebase.auth,\r\n        authError:state.auth.authError\r\n    }\r\n}\r\n\r\nconst wrapedForm = reduxForm({\r\n    form:'SignUpForm',\r\n    validate,\r\n})(Register);\r\n\r\nexport default connect(mapStateToProps,{signUp})(wrapedForm);","import React from 'react';\r\nimport { Field, reduxForm} from 'redux-form';\r\n\r\nclass SignInForm extends React.Component{\r\n\r\n    renderError({touched,error}){\r\n\r\n        if(touched && error){\r\n            return (\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {error} \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    onSubmit = (formValues)=>{\r\n        this.props.onSubmit(formValues);\r\n    }\r\n    \r\n\r\n    renderInput = ({input,label,meta,type}) => {\r\n        const className = `form-group ${meta.touched && meta.error ? 'alert alert-danger' : ''}`\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input className=\"form-control\" {...input} type={type}/>\r\n                {this.renderError(meta)}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container mt-5\">\r\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"register-form\">\r\n                    <Field name=\"email\"  component={this.renderInput} label=\"Email\" type=\"email\" required/>\r\n                    <Field name=\"password\" component={this.renderInput} label=\"Password\" type=\"password\" required/>\r\n                    <button type=\"submit\" className=\"btn btn-success\">Login</button>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n\r\n    if(!formValues.email){\r\n        errors.email = \"You must enter a valid Email\";\r\n    }\r\n\r\n    if(!formValues.password){\r\n        errors.password = \"You must enter a valid Password\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n\r\nexport default reduxForm({\r\n    form:'SignInForm',\r\n    validate,\r\n})(SignInForm);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport LoginForm from './LoginForm';\r\nimport {login} from '../../actions/auth';\r\n \r\n\r\nclass Login extends React.Component{\r\n\r\n    onSubmit = (formValues) => {\r\n        this.props.login(formValues);\r\n    }\r\n\r\n    render(){\r\n\r\n        if(this.props.auth.uid) return <Redirect to='/groups'/>\r\n        \r\n        return(\r\n            <div className=\"container register-container\">\r\n                <h1>Login To Your Account</h1>\r\n                <LoginForm onSubmit = {this.onSubmit}/>\r\n                <div className=\"\">   \r\n                    <span>Don't have an account? </span>\r\n                    <Link to='/register'>Signup</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {auth:state.firebase.auth}\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps,{login})(Login);","import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyAUKERwevUlbLguaUpLOCx7PSaLT7OE2_g\",\r\n    authDomain: \"freechat-bc11e.firebaseapp.com\",\r\n    databaseURL: \"https://freechat-bc11e.firebaseio.com\",\r\n    projectId: \"freechat-bc11e\",\r\n    storageBucket: \"freechat-bc11e.appspot.com\",\r\n    messagingSenderId: \"472453264505\",\r\n    appId: \"1:472453264505:web:649bd1511aca0c22e550a8\",\r\n    measurementId: \"G-1Q6FT1F17S\"\r\n  };\r\n  // Initialize Firebase\r\n  firebase.initializeApp(firebaseConfig);\r\n  firebase.firestore().settings({});\r\n\r\n  export default firebase;","import React from 'react';\r\nimport { Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n \r\nimport {createGroup} from '../../actions/groups';\r\n\r\nclass CreateGroup extends React.Component{\r\n\r\n    renderError({touched,error}){\r\n\r\n        if(touched && error){\r\n            return (\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {error} \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    onSubmit = (formValues)=>{\r\n        this.props.createGroup(formValues);\r\n    }\r\n    \r\n\r\n    renderInput = ({input,label,meta,type,placeholder}) => {\r\n        const className = `form-group ${meta.touched && meta.error ? 'alert alert-danger' : ''}`\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input className=\"form-control\" placeholder={placeholder} {...input} type={type}/>\r\n                {this.renderError(meta)}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        if(!this.props.auth.uid) return <Redirect to='/login'/>\r\n\r\n        return(\r\n            <div className=\"container create-group-container\">\r\n                <h1>Create A New Group</h1>\r\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"create-group-form\">\r\n                    <Field name=\"groupname\"  component={this.renderInput} label=\"Group Name\" type=\"text\" placeholder=\"Group Name\" required/>\r\n                    <Field name=\"groupicon\"  component={this.renderInput} label=\"Group Icon\" type=\"text\" placeholder=\"Group Icon Url\"/>\r\n                    <Field name=\"description\"  component={this.renderInput} label=\"Group Description\" type=\"text\" placeholder=\"Group Description\"/>\r\n                    <button type=\"submit\" className=\"btn btn-success\">Create</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n\r\n    if(!formValues.groupname){\r\n        errors.groupname = \"You must enter a Group Name\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {auth:state.firebase.auth}\r\n}\r\n\r\n\r\nconst wrapedForm = reduxForm({\r\n    form:'CreateGroupForm',\r\n    validate,\r\n})(CreateGroup);\r\n\r\nexport default connect(mapStateToProps,{createGroup})(wrapedForm);","import firebase from '../config/firebaseConfig';\r\nimport history from '../history';\r\n\r\nimport {CREATE_GROUP, CREATE_GROUP_ERROR, FETCH_GROUPS, FETCH_GROUP, MESSAGE_SENT, MESSAGE_SENT_ERROR, FETCH_MESSAGES, JOIN_GROUP, LEAVE_GROUP} from './types'\r\n\r\nexport const createGroup = (group) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const username = getState().firebase.profile.username;\r\n        const adminId = getState().firebase.auth.uid;\r\n        firestore.collection('groups').add({\r\n            ...group,\r\n            adminId:adminId,\r\n            adminUsername:username,\r\n            createdAt:new Date(),\r\n            members:[{id:adminId,\r\n                    username:username}]\r\n        }).then( (group) => {\r\n            firestore.collection('users').doc(adminId).update({\r\n                groups:firebase.firestore.FieldValue.arrayUnion(group.id)\r\n            });\r\n\r\n            dispatch({type:CREATE_GROUP, payload:group});\r\n            history.push('/groups');\r\n        }).catch( (err) => {\r\n            dispatch({type:CREATE_GROUP_ERROR, payload:err});\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchGroups = (groups) => {\r\n\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n\r\n        // const groups = getState().firebase.profile.groups;\r\n        \r\n        console.log(groups);\r\n        const data = [];\r\n            if(groups){\r\n                // eslint-disable-next-line\r\n                    groups.map(group => {\r\n            firestore.collection('groups').doc(group).get().then((doc) => {\r\n                data.push(Object.assign({ id: doc.id }, doc.data()));\r\n            }\r\n            ).then(() => {\r\n                dispatch({type:FETCH_GROUPS, payload:data})\r\n        });\r\n        })                                  \r\n        // firestore.collection(\"groups\").get()\r\n        // .then(querySnapshot => {\r\n        //     const data = querySnapshot.docs.map(doc => \r\n        //         Object.assign({ id: doc.id }, doc.data()));\r\n        //     dispatch({type:FETCH_GROUPS, payload:data});\r\n        // });\r\n    }\r\n    }\r\n}\r\n\r\n\r\nexport const fetchGroup = (id) => {\r\n\r\n    console.log(id);\r\n\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('groups').doc(id).get().then( (doc) => {\r\n            const data = doc.data();\r\n            data.id = doc.id;\r\n            dispatch({type:FETCH_GROUP, payload:data});\r\n        })\r\n    }\r\n\r\n}\r\n\r\n\r\nexport const sendMessage = (id, message) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection('groups').doc(id).collection('messages').add({\r\n            text:message.text,\r\n            time:message.time,\r\n            author:message.author\r\n        }).then(() => {\r\n            dispatch({type:MESSAGE_SENT,payload:message})\r\n        }).catch((err) => {\r\n            dispatch({type:MESSAGE_SENT_ERROR,payload:err})\r\n        })\r\n    }\r\n}\r\n\r\nexport const fetchMessages = (id) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        firestore.collection(\"groups\").doc(id).collection('messages').get()\r\n        .then(querySnapshot => {\r\n            const data = querySnapshot.docs.map(doc => \r\n                Object.assign({ id: doc.id }, doc.data()));\r\n            dispatch({type:FETCH_MESSAGES, payload:data});\r\n        });\r\n}\r\n}\r\n\r\nexport const joinGroup = (groupname) => {\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const username = getState().firebase.profile.username;\r\n        const userId = getState().firebase.auth.uid;\r\n        const firestore = getFirestore();\r\n        let groupId = '';\r\n        console.log('join Grp', groupname)\r\n        firestore.collection('groups').where('groupname','==',groupname.groupname).get()\r\n        .then(function(querySnapshot) {\r\n            querySnapshot.forEach(function(doc) {\r\n                console.log(doc.data());\r\n                groupId = doc.id;\r\n                doc.ref.update({\r\n                    members:firebase.firestore.FieldValue.arrayUnion({id:userId,username:username})\r\n                }).then( () => {\r\n                    firestore.collection('users').doc(userId).update({\r\n                        groups:firebase.firestore.FieldValue.arrayUnion(groupId)\r\n                    }).then(() => {\r\n                        dispatch({type:JOIN_GROUP,payload:groupId});\r\n                        history.push('/groups');\r\n                    })\r\n                })\r\n            });\r\n        \r\n        \r\n    }).catch(function(error) {\r\n        console.log(\"Error getting documents: \", error);\r\n    });\r\n}}\r\n\r\nexport const leaveGroup = (groupId) => {\r\n\r\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\r\n        const firestore = getFirestore();\r\n        const userId = getState().firebase.auth.uid;\r\n        firestore.collection('users').doc(userId).update({\r\n            groups:firebase.firestore.FieldValue.arrayRemove(groupId)\r\n        }).then(() => {\r\n            dispatch({type:LEAVE_GROUP,payload:groupId});\r\n            history.push('/groups');\r\n        })\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport {fetchGroups} from '../../actions/groups';\r\n\r\n\r\nclass Groups extends React.Component{\r\n\r\n    wait = time => new Promise((resolve) => setTimeout(resolve, time));\r\n\r\n    componentDidMount(){\r\n        if(this.props.profile.groups){\r\n            this.props.fetchGroups(this.props.profile.groups);\r\n        }\r\n        else{\r\n            this.wait(1000).then( () => this.props.fetchGroups(this.props.profile.groups));\r\n        }\r\n        \r\n    }\r\n\r\n    renderGroupList(){\r\n        if(this.props.groups){\r\n        return this.props.groups.map(group =>{\r\n            return (\r\n                <a href={`/group/${group.id}`} key={group.id}>\r\n                    <div className=\"card mb-3\" style={{maxWidth: \"540px\"}}>\r\n                        <div className=\"row no-gutters\">\r\n                        <div className=\"col-md-4 card-img-div\">\r\n                            <img src={group.groupicon} className=\"card-img\" alt=\"...\"/>\r\n                        </div>\r\n                        <div className=\"col-md-8\">\r\n                            <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{group.groupname}</h5>\r\n                            <p className=\"card-text\">{group.description}</p>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </a>\r\n            )\r\n\r\n        });\r\n    }\r\n    }\r\n    \r\n\r\n    render(){\r\n\r\n        const {auth} = this.props;\r\n\r\n        if(!auth.uid) return <Redirect to='/login'/>\r\n\r\n        return (\r\n            <div className=\"container groups-container mt-3\">\r\n                <h1>My Groups</h1>\r\n                <ul className=\"group-list\">\r\n                    {this.renderGroupList()}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        groups:Object.values(state.groups),\r\n        profile:state.firebase.profile,\r\n        auth:state.firebase.auth,\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps,{fetchGroups}),\r\n    firestoreConnect([\r\n    ]),\r\n)(Groups);\r\n\r\n","import React from 'react';\r\nimport moment from 'moment';\r\n\r\n\r\nclass Message extends React.Component{\r\n\r\n    render(){\r\n        const {message} = this.props;\r\n        return (\r\n            <div className=\"message\">\r\n                <p className=\"meta\">{message.author.username} <span> <small>{ moment(message.time.toDate()).format('llll') }</small></span></p>\r\n                <p className=\"text\">\r\n                    { message.text }\r\n                </p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Message;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport { animateScroll } from \"react-scroll\";\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport Message from './Message';\r\nimport {fetchGroup, sendMessage, fetchMessages, leaveGroup} from '../../actions/groups'\r\n\r\n\r\n\r\n\r\nclass Chat extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.chatMessagesRef = React.createRef();\r\n      }\r\n\r\n    state = {msg:''};\r\n\r\n    onInputChange = (event) =>{\r\n        this.setState({msg:event.target.value});\r\n    }\r\n\r\n    onFormSubmit = (event) => {\r\n        console.log(this.props.match.params.id,this.state.msg);\r\n        event.preventDefault();\r\n        this.props.sendMessage(\r\n            this.props.match.params.id,\r\n            {\r\n            text:this.state.msg,\r\n            author:this.props.user,\r\n            time: new Date(),\r\n        });\r\n        document.querySelector('#msg').value='';\r\n        // this.chatMessagesRef.current.scrollTop = this.chatMessagesRef.current.scrollHeight;\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    scrollToBottom() {\r\n        animateScroll.scrollToBottom({\r\n          containerId: \"chat-messages\"\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        const id = this.props.match.params.id;\r\n        this.props.fetchGroup(id);\r\n        // this.chatMessagesRef.current.scrollTop = this.chatMessagesRef.current.scrollHeight;\r\n        this.scrollToBottom();\r\n    }\r\n\r\n    onLeaveGroup(groupId){\r\n        this.props.leaveGroup(groupId);\r\n    }\r\n\r\n\r\n    renderMembers(group){\r\n\r\n        if(group){\r\n\r\n            if(group.members){\r\n\r\n                console.log(group.members)\r\n\r\n                return  group.members.map((member)=>{\r\n                return( <li key={member.id}> {member.username} <span  id= {member.username}  className=\"\"></span></li>)\r\n                })\r\n        }\r\n    }\r\n    }\r\n\r\n    renderMessages(messages){\r\n\r\n\r\n            if(messages){\r\n                return messages.map((message)=>{\r\n                     return (<Message key={message.id} message={message}/>)\r\n            });\r\n        }\r\n        \r\n\r\n    }\r\n        \r\n\r\n    render(){\r\n\r\n        const {group} = this.props;\r\n\r\n        if(!this.props.auth.uid) return <Redirect to='/login'/>\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"chat-container\">\r\n                    <header className=\"chat-header\">\r\n                    <h1><img src={group?group.groupicon:''} alt=\"\"/> <span id=\"group-name\">{group?group.groupname:''}</span></h1>\r\n                    <button className=\"btn btn-danger btn-lg\" onClick= { () => this.onLeaveGroup(group.id)}>Leave Group</button>\r\n                    </header>\r\n                    <main className=\"chat-main\">\r\n                    <div className=\"chat-sidebar\">\r\n                        <h3><i className=\"fas fa-comments\"></i> Group Description:</h3>\r\n                        <h2>{group?group.description:''}</h2>\r\n                        <h3><i className=\"fas fa-users\"></i> Users</h3>\r\n                        <ul id=\"users\">\r\n                            {this.renderMembers(group)}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"chat-messages\" id=\"chat-messages\" ref={this.chatMessagesRef}> \r\n                        {this.renderMessages(this.props.messages)}\r\n                    </div>\r\n                    </main>\r\n                    <div className=\"chat-form-container\">\r\n                    <form id=\"chat-form\" onSubmit={this.onFormSubmit}>\r\n                        <input\r\n                        id=\"msg\"\r\n                        name=\"message\"\r\n                        type=\"text\"\r\n                        placeholder=\"Enter Message\"\r\n                        required\r\n                        autoComplete=\"off\"\r\n                        onChange={this.onInputChange}\r\n                        />\r\n                        <button id=\"submit-btn\" className=\"btn btn-primary btn-lg\"><i className=\"fas fa-paper-plane\"></i> Send</button>\r\n                    </form>\r\n                    </div>\r\n                </div>\r\n                {this.scrollToBottom()}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        group:state.groups[ownProps.match.params.id],\r\n        user:{id:state.firebase.auth.uid,username:state.firebase.profile.username},\r\n        messages:state.firestore.ordered.messages,\r\n        auth:state.firebase.auth,\r\n    }\r\n}\r\n\r\nexport default  compose(\r\n    connect(mapStateToProps,{fetchGroup,sendMessage,fetchMessages,leaveGroup}),\r\n    firestoreConnect((props) => [\r\n        {collection:'groups',\r\n             doc:props.match.params.id,\r\n            subcollections:[{collection:'messages', orderBy: ['time']}],\r\n            storeAs:'messages',\r\n        },\r\n        \r\n    ]),\r\n)(Chat);","import React from 'react';\r\nimport { Field, reduxForm} from 'redux-form';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\n \r\nimport {joinGroup} from '../../actions/groups';\r\n\r\nclass JoinGroup extends React.Component{\r\n\r\n    renderError({touched,error}){\r\n\r\n        if(touched && error){\r\n            return (\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                    {error} \r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    onSubmit = (formValues)=>{\r\n        this.props.joinGroup(formValues);\r\n    }\r\n    \r\n\r\n    renderInput = ({input,label,meta,type,placeholder}) => {\r\n        const className = `form-group ${meta.touched && meta.error ? 'alert alert-danger' : ''}`\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input className=\"form-control\" placeholder={placeholder} {...input} type={type}/>\r\n                {this.renderError(meta)}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n\r\n    render(){\r\n\r\n        if(!this.props.auth.uid) return <Redirect to='/login'/>\r\n\r\n        return(\r\n            <div className=\"container create-group-container\">\r\n                <h1>Join A New Group</h1>\r\n                <form onSubmit={this.props.handleSubmit(this.onSubmit)} className=\"create-group-form\">\r\n                    <Field name=\"groupname\"  component={this.renderInput} label=\"Group Name\" type=\"text\" placeholder=\"Group Name\" required/>\r\n                    <button type=\"submit\" className=\"btn btn-success\">Join</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst validate = (formValues) => {\r\n    const errors = {};\r\n\r\n    if(!formValues.groupname){\r\n        errors.groupname = \"You must enter a Group Name\";\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {auth:state.firebase.auth}\r\n}\r\n\r\nconst wrapedForm = reduxForm({\r\n    form:'JoinGroupForm',\r\n    validate,\r\n})(JoinGroup);\r\n\r\nexport default connect(mapStateToProps,{joinGroup})(wrapedForm);","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nclass Home extends React.Component{\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"home-container container\">\r\n                <div className=\"jumbotron\">\r\n                    <h1 className=\"display-4\">Welcome to Free Chat</h1>\r\n                    <p className=\"lead\">A Free Group Chat Platform</p>\r\n                    <hr className=\"my-4\"/>\r\n                    <p className=\"lead\">Free Chat is the easiest way to communicate over text, whether you’re part of a school club, a nightly gaming group, a worldwide art community, or just a handful of friends that want to hang out.</p>\r\n                    <div className=\"btn-container d-flex justify-content-center\">\r\n                        <div><Link  className=\"btn btn-lg btn-primary\" to=\"/login\">Login</Link></div>\r\n                        <div><Link  className=\"btn btn-lg btn-primary\" to=\"/register\">Create A New Account</Link></div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport {Router, Route, Switch } from 'react-router-dom';\r\n\r\n\r\nimport history from '../history';\r\nimport Header from './header/Header';\r\nimport Register from './auth/Register';\r\nimport Login from './auth/Login';\r\nimport CreateGroup from './groups/CreateGroup';\r\nimport Groups from './groups/Groups';\r\nimport Chat from './groups/Chat';\r\nimport JoinGroup from './groups/JoinGroup';\r\nimport Home from './Home';\r\n\r\n\r\nclass App extends React.Component{\r\n    render(){\r\n        return (\r\n            <div>\r\n                <Router history={history}>\r\n                    <div>\r\n                        <Header/>\r\n                        <Switch>\r\n                            <Route path=\"/\" exact component={Home} />\r\n                            <Route path=\"/register\" exact component={Register} />\r\n                            <Route path=\"/login\" exact component={Login} />\r\n                            <Route path=\"/groups/create\" exact component={CreateGroup} />\r\n                            <Route path=\"/groups\" exact component={Groups} />\r\n                            <Route path=\"/groups/join\" exact component={JoinGroup} />\r\n                            <Route path=\"/group/:id\" exact component={Chat} />\r\n                            \r\n                        </Switch>\r\n                    </div>\r\n                </Router>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default App;","import {LOGIN_ERROR, LOGIN_SUCCESS, LOGOUT_SUCCESS, SIGN_UP_SUCCESS, SIGN_UP_ERROR} from '../actions/types';\r\n\r\n\r\nconst intialState = {\r\n    authError:null,\r\n};\r\n\r\nconst authReducer = (state = intialState, action) => {\r\n    switch(action.type){\r\n        case LOGIN_ERROR:\r\n            return { ...state, authError:'Login Failed'}\r\n        case LOGIN_SUCCESS:\r\n            return { ...state, authError:null}\r\n        case LOGOUT_SUCCESS:\r\n            console.log('Logout Success');\r\n            return state;\r\n        case SIGN_UP_SUCCESS:\r\n            console.log('Signup Success');\r\n            return { ...state, authError:null}\r\n        case SIGN_UP_ERROR:\r\n            console.log('Signup Error');\r\n            return { ...state, authError:action.payload.message}\r\n        \r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default authReducer;","import _ from 'lodash';\r\n\r\nimport {CREATE_GROUP, CREATE_GROUP_ERROR, FETCH_GROUP, FETCH_GROUPS, JOIN_GROUP, LEAVE_GROUP} from '../actions/types'\r\n\r\nconst intialState = {\r\n\r\n};\r\n\r\n\r\nconst groupReducer = (state = intialState, action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case CREATE_GROUP:\r\n            console.log('Group Created');\r\n            return { ...state}\r\n        case CREATE_GROUP_ERROR:\r\n            console.log('Group Create Error');\r\n            return { ...state}\r\n        case FETCH_GROUPS:\r\n            return {...state,  ..._.mapKeys(action.payload,'id')}\r\n        case FETCH_GROUP:\r\n            return {...state, [action.payload.id] : action.payload};\r\n        case JOIN_GROUP:\r\n            console.log(\"JOIN GROUP \",action.payload);\r\n            return {...state};\r\n        case LEAVE_GROUP:\r\n            console.log(\"Leave GROUP \",action.payload);\r\n            return {...state};\r\n        default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\nexport default groupReducer;","import {FETCH_MESSAGES, FETCH_MESSAGES_ERROR} from '../actions/types';\r\n\r\nconst intialState = {\r\n\r\n};\r\n\r\n\r\nconst messagesReducer = (state = intialState, action) => {\r\n\r\n    switch(action.type){\r\n\r\n        case FETCH_MESSAGES:\r\n            return {...state, msg:action.payload}\r\n        case FETCH_MESSAGES_ERROR:\r\n            return {...state}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default messagesReducer;","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { firebaseReducer } from 'react-redux-firebase';\r\nimport { firestoreReducer } from 'redux-firestore';\r\n\r\nimport authReducer from './authReducer';\r\nimport groupReducer from './groupReducer';\r\nimport messagesReducer from './messagesReducer';\r\n\r\n\r\nexport default combineReducers({\r\n    auth:authReducer,\r\n    form:formReducer,\r\n    groups:groupReducer,\r\n    firebase:firebaseReducer,\r\n    firestore:firestoreReducer,\r\n    messages:messagesReducer,\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider, useSelector } from 'react-redux';\r\nimport  { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport { reduxFirestore, getFirestore, createFirestoreInstance } from 'redux-firestore';\r\nimport { ReactReduxFirebaseProvider, getFirebase, isLoaded } from 'react-redux-firebase';\r\nimport firebase from 'firebase/app';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\nimport firebaseConfig from './config/firebaseConfig';\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(\r\n    applyMiddleware(reduxThunk.withExtraArgument({getFirebase, getFirestore})), \r\n    reduxFirestore(firebaseConfig),\r\n    ));\r\n\r\nconst rrfConfig = {\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true,\r\n}\r\n\r\n    \r\nconst rrfProps = {\r\n    firebase,\r\n    config: rrfConfig,\r\n    dispatch: store.dispatch,\r\n    createFirestoreInstance,\r\n}\r\n\r\nconst AuthIsLoaded = ({ children }) => {\r\n    const auth = useSelector(state => state.firebase.auth)\r\n    if (!isLoaded(auth)) return (\r\n        <div className=\"d-flex justify-content-center\">\r\n            <div className=\"spinner-border\" role=\"status\">\r\n            <span className=\"sr-only\">Loading...</span>\r\n            </div>\r\n        </div>);\r\n    return children\r\n  }\r\n\r\n\r\n    ReactDOM.render(\r\n        <Provider store={store}>\r\n            <ReactReduxFirebaseProvider {...rrfProps}>\r\n                <AuthIsLoaded>\r\n                    <App/>\r\n                </AuthIsLoaded>\r\n            </ReactReduxFirebaseProvider>\r\n        </Provider>,\r\n        document.querySelector('#root'));\r\n\r\n\r\n"],"sourceRoot":""}